/* ----------------------------------------------------------
Maxima File to compute total derivative expressions for scrf

@author: Nick Gibbons
-----------------------------------------------------------*/

/* Suppress output until we are ready */
eval_when(batch,ttyoff : true)$

mass:rho*v*A - rho0*v0*A0;
mom:rho*v*v*A + p*A - rho0*v0*v0*A0 - p0*A0 -(p+p0)/2*dA + c*f*rho0*v0*v0;
nrg:rho*v*A*(u+v*v/2) + p*A*v - rho0*v0*A0*(u0+v0*v0/2) - p0*A0*v0 - H*A0*dx + rho0*v0*CH*(u0 + r*v0*v0/2 - uw);
eos:p-rho*R*u/cv;

dRdU1:matrix([diff(mass,rho), diff(mass,v), diff(mass,p), diff(mass,u)],
             [diff(mom, rho), diff(mom, v), diff(mom, p), diff(mom, u)],
             [diff(nrg, rho), diff(nrg, v), diff(nrg, p), diff(nrg, u)],
             [diff(eos, rho), diff(eos, v), diff(eos, p), diff(eos, u)]);

dRdU0:matrix([diff(mass,rho0), diff(mass,v0), diff(mass,p0), diff(mass,u0)],
             [diff(mom, rho0), diff(mom, v0), diff(mom, p0), diff(mom, u0)],
             [diff(nrg, rho0), diff(nrg, v0), diff(nrg, p0), diff(nrg, u0)],
             [diff(eos, rho0), diff(eos, v0), diff(eos, p0), diff(eos, u0)]);

dRdH:matrix([diff(mass, H)], [diff(mom,H)], [diff(nrg, H)], [diff(eos, H)]);
dU0dH:matrix([dr0dH], [dv0dH], [dp0dH], [du0dH]);

display2d:false$
rhs_a:-dRdU0.dU0dH - dRdH;

rhs:matrix([rhs0], [rhs1], [rhs2], [0]);


Jinv:invert(dRdU1)$

dUdH:Jinv.rhs$


drdH:dUdH[1,1]$
drdH:fullratsimp(drdH);
print("")$

dvdH:dUdH[2,1]$
dvdH:fullratsimp(dvdH);
print("")$

dpdH:dUdH[3,1]$
dpdH:fullratsimp(dpdH);
print("")$

dudH:dUdH[4,1]$
dudH:fullratsimp(dudH);
print("")$

eval_when(batch,ttyoff : false)$

print("    // Automatically generated by heat_addition_derivative.max")$
print("    double rhs0 =", rhs_a[1,1], ";")$
print("    double rhs1 =", rhs_a[2,1], ";")$
print("    double rhs2 =", rhs_a[3,1], ";")$
print("    double rhs3 =", rhs_a[4,1], ";")$
print(" ")$
print("    double drdH =", drdH, ";")$
print("    double dvdH =", dvdH, ";")$
print("    double dpdH =", dpdH, ";")$
print("    double dudH =", dudH, ";")$

