/* ---------------------------------------------------------
Maxima File to compute linearised conservation eqns for scrf

@author: Nick Gibbons
-----------------------------------------------------------*/

mass:rho*v*A - rho1*v1*A1;
mom:rho*v*v*A + p*A - rho1*v1*v1*A1 - p1*A1 -(p+p1)/2*dA + c*f*rho*v*v;
nrg:rho*v*A*(u+v*v/2) + p*A*v - rho1*v1*A1*E1 - p1*A1*v1;
eos:p-rho*u/cv;

/* Okay this matches what you get when you do all the substitution */

J:matrix([diff(mass, rho), diff(mass, v), diff(mass, p), diff(mass, u)],
         [diff(mom, rho), diff(mom, v), diff(mom, p), diff(mom, u)],
         [diff(nrg, rho), diff(nrg, v), diff(nrg, p), diff(nrg, u)],
         [diff(eos, rho), diff(eos, v), diff(eos, p), diff(eos, u)]);

/*
J:matrix([v*A,   rho*A,       0, 0],
         [0,     rho*v,       1, 0],
         [v*E*A, rho*(E+p)*A, 0, rho*v*A],
         [dfdr,  0,        -1, dfdu]);
*/

dRdf:matrix([diff(mass, f)], [diff(mom,f)], [diff(nrg, f)], [diff(eos, f)]);

Jinv:invert(J)$

dUdf:Jinv.-dRdf$

display2d:false$

drdf:dUdf[1,1]$
drdf:fullratsimp(drdf)$
bot:denom(drdf);
drdf:subst(D, bot, drdf);
print("")$

dvdf:dUdf[2,1]$
dvdf:fullratsimp(dvdf)$
dvdf:subst(D, bot, dvdf);
print("")$

dpdf:dUdf[3,1]$
dpdf:fullratsimp(dpdf)$
dpdf:subst(D, bot, dpdf);
print("")$

dudf:dUdf[4,1]$
dudf:fullratsimp(dudf)$
dudf:subst(D, bot, dudf);
print("")$
